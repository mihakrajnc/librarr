@page "/authors/{Id:int}"
@using Librarr.Components.Dialogs
@using Librarr.Data
@using Librarr.Services.Metadata
@using Microsoft.EntityFrameworkCore

@inject IMetadataService  MetadataService
@inject LibrarrDbContext db
@inject IDialogService    DialogService
@inject ILogger<Search>   Logger

<PageTitle>Author Details</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Author Details</MudText>

<MudTable Items="@_searchResults" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading"
          LoadingProgressColor="Color.Info">
    <HeaderContent>
        <MudTh>ID</MudTh>
        <MudTh>Title</MudTh>
        <MudTh>Author</MudTh>
        <MudTh>Published</MudTh>
        <MudTh>Grab</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="ID">@context.ID</MudTd>
        <MudTd DataLabel="Title">@context.Title</MudTd>
        <MudTd DataLabel="Author">@context.AuthorName</MudTd>
        <MudTd DataLabel="Published">@context.PublishYear</MudTd>
        <MudTd DataLabel="Grab">
            <MudFab Color="Color.Secondary" Disabled="@(IsBookAlreadyAdded(context))"
                    StartIcon="@Icons.Material.Filled.Add" Size="Size.Small"
                    OnClick="() => OnAddClicked(context)"/>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager/>
    </PagerContent>
</MudTable>

@code {
    [Parameter] public int Id { get; set; }
    
    private readonly CancellationTokenSource _cts = new();
    private bool _searchOnAdd = true;

    private bool _loading;

    private BookSearchItem[] _searchResults = [];

    protected override async Task OnInitializedAsync()
    {
        _loading = true;

        //await _cts.CancelAsync();

        var author = await db.Authors.FirstAsync(a => a.Id == Id);

        _searchResults = await MetadataService.FetchAuthorBooks(author.OLID, author.Name);

        _loading = false;
    }

    private async Task OnAddClicked(BookSearchItem book)
    {
        await DialogService.ShowAsync<AddBookDialog>("Add book", new DialogParameters<AddBookDialog>
        {
            { x => x.Book, book }
        });
    }


    private bool IsBookAlreadyAdded(BookSearchItem book)
    {
        return db.Books.Any(b => b.OLID == book.ID);
    }

}